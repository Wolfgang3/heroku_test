//mixins
@mixin bp($bp, $min-max: min-width) {
    $em: $bp/16;
    @media(#{$min-max}: #{$em}em) {
        @content;
    }
}
 
/////////////////////////////////
//Tool tip mixin
///////////////////////////////
@mixin tips($tt-side: top, $tt-color: #1BBC9B, $text: #fff) {
    cursor: pointer;
    position: relative;
    &:before,
    &:after {
        content: "";
        opacity: 0;
        position: absolute;
        transform: scale(.8) translate(-50%, 0); 
        transition-property: all;
        transition-duration: 0.75s;
        transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);
        z-index: -100;
    }
    //pointer tip
    &:before {
        border-style: solid;
        border-width: 1.25em 0.75em 0 0.75em;
        border-color: $tt-color transparent transparent transparent;
    }
    //bubble
    &:after {
        background: $tt-color;
        border-radius: .25em;
        color: $text;
        content: attr(data-tip);
        line-height: 1.4;
        min-width: 10em;  
        padding: 1em;
        transition-delay: 0.2s;
    }
    //common hover styles for all directions
    &:hover:before,
    &:focus:before,
    &:hover:after,
    &:focus:after {
        opacity: 1;
        transform: scale(1) translate(-50%, 0);
        z-index: 100;
    }
    &:hover:before,
    &:focus:before {
        transition-duration: .85s;
    }
    &:hover:after,
    &:focus:after {
        transition-delay: 0;
        transition-duration: 0.5s;
    }
    @if $tt-side == top {
        &:after {
            bottom: 100%;
            left: 50%;
            right: auto;
            top: auto;
        }

        &:before {
            bottom: 200%;
            left: 50%;
            right: auto;
            top: auto;
        }

        &:hover:after,
        &:focus:after  {
            bottom: 200%;
            left: 50%;
            right: auto;
            top: auto;
        }

        &:hover:before,
        &:focus:before  {  
            bottom: 120%;
            left: 50%;
            right: auto;
            top: auto;
        }
    }
    
    @if $tt-side == bottom {
        &:after {
            bottom: auto;
            left: 50%;
            top: 100%;
            right: auto;
        }

        &:before {
            border-width: 0 0.75em 1.25em 0.75em;
            border-color:  transparent transparent $tt-color transparent;
            bottom: auto;
            left: 50%;
            right: auto;
            top: 200%;
        }

        &:hover:after,
        &:focus:after {
            bottom: auto;
            left: 50%;
            opacity: 1;
            right: auto;
            top: 198%;
        }

        &:hover:before,
        &:focus:before {  
            bottom: auto;
            left: 50%;
            opacity: 1;
            right: auto;
            top: 120%;
        }
    }
    
    @if $tt-side == left {
        &:after {
            bottom: auto;
            left: auto;
            right: 95%;
            top: 50%;
            transform: scale(.8) translate(0, -50%);
        }

        &:before {
            border-width: 0.75em 0 0.75em 1.25em;
            border-color:  transparent transparent transparent $tt-color;
            bottom: auto;
            left: auto;
            right: 130%;
            top: 50%;
            transform: scale(.8) translate(0, -50%);
        }

        &:hover:after,
        &:focus:after {
            bottom: auto;
            left: auto;
            right: 117%; 
            top: 50%;
            transform: scale(1) translate(0, -50%);
            transition-duration: .5s;
        }

        &:hover:before,
        &:focus:before {  
            bottom: auto;
            left: auto;
            right: 102%;
            top: 50%;
            transform: scale(1) translate(0, -50%);
            transition-duration: .75s;
        }        
    }
    @if $tt-side == right {
        &:after {
            bottom: auto;
            left: 95%;
            right: auto;
            top: 50%;
            transform: scale(.8) translate(0, -50%);
        }

        &:before {
            border-width: 0.75em 1.25em 0.75em 0;
            border-color:  transparent $tt-color transparent transparent;
            bottom: auto;
            left: 130%;
            right: auto;
            top: 50%;
            transform: scale(.8) translate(0, -50%);
        }

        &:hover:after,
        &:focus:after {
            bottom: auto;
            left: 120%; 
            right: auto;
            top: 50%;
            transform: scale(1) translate(0, -50%);
            transition-duration: .5s;
        }

        &:hover:before,
        &:focus:before {  
            bottom: auto;
            left: 109%;
            right: auto;
            top: 50%;
            transform: scale(1) translate(0, -50%);
            transition-duration: .75s;
        }
    }
}
//end of tool tip mixin
////////////////////////////////////


//include tip mixin with no arguments
.tool--top {
    @include tips;
}

//pass directional argument to dictate which side the tip will emerge from
.tool--bottom {
    @include tips(bottom);
    
    @include bp(1280) {
        @include tips(top);
    }
}


//change up tip direction based on size restraints
.tool--left {
    @include tips(bottom);
    
    @include bp(580) {
        @include tips(top);
    }
    
    @include bp(980) {
        @include tips(right);
    }
    
    @include bp(1280) {
        @include tips(bottom);
    }
}











//Everything below is purely aesthetics 
//font
@import url(http://fonts.googleapis.com/css?family=Audiowide);
$audio:  'Audiowide', cursive;
//colors
$blue: #446CB3;
$green: #1BBC9B;


body { background: url('http://david-conner.com/images/heroBg.jpg') repeat; }

.wrap {
    font-size: 1rem;
    display: block;
    height: 100%;
    padding: 1em 1.5em;
    text-align: center;
    width: 100%;
    @include bp(600) {
        padding: 1em 1.5em;
    }
}

h1 {
    color: $blue;
    font-family: $audio;
    font-size: 7vw;
    margin: 1em 0 2em;
    text-align: center;
    @include bp(400) { font-size: 8vw; }
}

a:focus { outline: none; }

a:nth-of-type(3) {
    display: none;
    @include bp(390) { display: inline; }
}

.tool { 
    color: $green;
    display: inline-block;
    font-weight: bold;
    //overflow: hidden; 
    position: relative;
    text-decoration: none;
    
    & + a {
        margin-left: 2em; 
    }
    
    
}

p {
    color: #333; 
    margin: 1em auto;
    max-width: 41em;
    
    @include bp(1280) { font-size: 1.45em; }
}




















